#!/bin/bash

####################
# Global Variables #
####################

#Set defaults
declare -A globals=( ["UDPComment"]="#" )

#############
# Functions #
#############

help() {
  echo 'Command Help'
}

#$1 line to check
#$2 regex to match comment
is_comment() {
  local regex="##.*$2"
  [[ $1 =~ $regex ]]
}

#$1 line to read
#$2 target
#$3 target preamble
read_line() {
  local raw_regex="$2=(.+)$"
  local regex="$3$raw_regex"
  local comment_regex="(?:$3)?$raw_regex"
  if ! (is_comment "$1" "$comment_regex") && [[ $1 =~ $regex ]]; then
    echo "${BASH_REMATCH[1]}"
    return 0
  fi
  return 1
}

#$1 line to check for globals
read_globals() {
  for global in "${!globals[@]}"; do
    if out=$(read_line "$1" "$global" "#"); then
      globals[$global]=$out
    fi
  done
}

###############
# Debug State #
###############

echo_globals() {
  for global in "${!globals[@]}"; do
    echo "Global \"$global\"=\"${globals[$global]}\""
  done
}

echo_processor_state() {
  echo "Processor has no state (not implemented)"
}

debug_state() {
  echo "Dumping Globals"
  echo_globals
  echo "Dumping Processor State"
  echo_processor_state
}

help_udp() {
  echo "Variables"
  echo
  echo "globals - Bash Associative Array. Stores all global variables"
  echo
  echo "Debugging Functions"
  echo
  echo "help_udp - display this help prompt"
  echo "debug_state - dumps entire process state"
  echo "echo_globals - dumps all set global variables"
  echo "echo_processor_state - dumps all pre/postprocessor variables"
}

debug_repl() {
  echo "Interactive debugging not implemented in this release"
}

#$1 line to check for debug statements
debug_line() {
  local regex="#\\?(..)\\?#"
  if [[ $1 =~ $regex ]]; then
    case ${BASH_REMATCH[1]} in
      'DS')
        debug_state
        ;;
      'DG')
        echo "Dumping Globals"
        echo_globals
        ;;
      'DP')
        echo "Dumping Processor State"
        echo_processor_state
        ;;
      'DI')
        debug_repl
        ;;
      *)
        echo "Unknown debug option \"${BASH_REMATCH[1]}\""
        ;;
    esac
  fi
}

###############
# Early Exits #
###############

# Invalid command early exit
if [[ $# -eq 0 ]]; then
  echo 'To few arguments'
  help
  exit 10
fi

# Invalid file early exit
if [[ ! -f $1 ]]; then
  echo "file \"$1\" does not exist"
  exit 12
fi

################
# Load file in #
################

echo "Loading \"$1\""

file=()

# This will load in the file line by line while looking for global variables

while IFS= read -r line
do
  debug_line "$line"
  read_globals "$line"
  file+=("$line")
done < "$1"
